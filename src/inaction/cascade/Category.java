package inaction.cascade;

// Generated 2013/01/05 23:20:24 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Category generated by hbm2java
 */
public class Category implements java.io.Serializable {

	private long categoryId;
	private Category parentCategory;
	private String name;
	private Date createdDate;
	private Set itemCategoryMappings = new HashSet(0);
	private Set childCategories = new HashSet(0);

	public Category() {
	}

	public Category(long categoryId) {
		this.categoryId = categoryId;
	}

	public Category(long categoryId, Category category, String name,
			Date createdDate, Set categories) {
		this.categoryId = categoryId;
		this.parentCategory = category;
		this.name = name;
		this.createdDate = createdDate;
		this.childCategories = categories;
	}

	public long getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(long categoryId) {
		this.categoryId = categoryId;
	}

	public Category getParentCategory() {
		return this.parentCategory;
	}

	public void setParentCategory(Category category) {
		this.parentCategory = category;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	public Set getChildCategories() {
		return this.childCategories;
	}

	public void setChildCategories(Set categories) {
		this.childCategories = categories;
	}
	
	public Set getItemCategoryMappings() {
		return this.itemCategoryMappings;
	}

	public void setItemCategoryMappings(Set itemCategoryMappings) {
		this.itemCategoryMappings = itemCategoryMappings;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Category other = (Category) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

}
